from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import get_file

def estimate_video_size(duration: float, quality: str) -> int:
    """
    –û—Ü–µ–Ω–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ–≥–¥–∞ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ.
    """
    BITRATES = {
        '144': 0.3,    # ~0.3 Mbps
        '240': 0.5,    # ~0.5 Mbps
        '360': 1.0,    # ~1.0 Mbps
        '480': 2.5,    # ~2.5 Mbps
        '720': 5.0,    # ~5.0 Mbps
        '1080': 8.0,   # ~8.0 Mbps
        'audio': 0.128  # ~128 kbps –¥–ª—è –∞—É–¥–∏–æ
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∏—Ç—Ä–µ–π—Ç –≤ Mbps
    bitrate = BITRATES.get(quality, 5.0)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Mbps –≤ –±–∞–π—Ç—ã –∏ —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    size_bytes = (bitrate * 1024 * 1024 * duration) / 8
    
    # –î–æ–±–∞–≤–ª—è–µ–º 10% –¥–ª—è —É—á–µ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    size_bytes *= 1.1
    
    return int(size_bytes)

def format_size(size_bytes: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
    if size_bytes < 1024:
        return f"{size_bytes} B"
    elif size_bytes < 1024 * 1024:
        return f"{size_bytes / 1024:.1f} KB"
    elif size_bytes < 1024 * 1024 * 1024:
        return f"{size_bytes / (1024 * 1024):.1f} MB"
    else:
        return f"{size_bytes / (1024 * 1024 * 1024):.1f} GB"

async def get_download_keyboard(video_id: int, info: dict) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏ –æ—Ç–º–µ—á–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.
    """
    keyboard = []
    duration = float(info.get('duration', 0))
    formats = info.get('formats', [])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—É–¥–∏–æ –≤ –∫—ç—à–µ
    cached_audio = await get_file(video_id, 'audio', 'audio')
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –∞—É–¥–∏–æ –∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤
    audio_format = next((f for f in formats if f.get('format_id') == 'worstaudio'), None)
    audio_size = audio_format.get('filesize', 0) if audio_format else estimate_video_size(duration, 'audio')
    
    # –ê—É–¥–∏–æ –∫–Ω–æ–ø–∫–∞
    keyboard.append([
        InlineKeyboardButton(
            text=f"üéµ audio / {format_size(audio_size)} {'‚ö°Ô∏è' if cached_audio else ''}",
            callback_data=f"dl_{video_id}_audio_audio"
        )
    ])
    
    # –í–∏–¥–µ–æ –∫–Ω–æ–ø–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
    video_resolutions = [
        ("256x144", "144"),
        ("426x240", "240"),
        ("640x360", "360"),
        ("852x480", "480"),
        ("1280x720", "720"),
        ("1920x1080", "1080")
    ]
    
    for resolution, quality in video_resolutions:
        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        matching_format = next(
            (f for f in formats if f.get('format_id') == f'url{quality}'), 
            None
        )
        
        if matching_format:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            size = matching_format.get('filesize', 0)
            if not size:
                size = estimate_video_size(duration, quality)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤ –∫—ç—à–µ
            cached_video = await get_file(video_id, quality, 'video')
            
            # –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –º–µ–Ω—å—à–µ 2GB, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
            if size < 2000 * 1024 * 1024:  # 2000 MB –≤ –±–∞–π—Ç–∞—Ö
                keyboard.append([
                    InlineKeyboardButton(
                        text=f"üìπ {resolution} / {format_size(size)} {'‚ö°Ô∏è' if cached_video else ''}",
                        callback_data=f"dl_{video_id}_{quality}_video"
                    )
                ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)